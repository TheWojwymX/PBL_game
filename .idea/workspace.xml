<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="CMakePresetLoader">{
  &quot;useNewFormat&quot;: true
}</component>
  <component name="CMakeReloadState">
    <option name="reloaded" value="true" />
  </component>
  <component name="CMakeRunConfigurationManager">
    <generated>
      <config projectName="SandBOX" targetName="glad" />
      <config projectName="SandBOX" targetName="stb_image" />
      <config projectName="SandBOX" targetName="assimp" />
      <config projectName="SandBOX" targetName="zlibstatic" />
      <config projectName="SandBOX" targetName="glfw" />
      <config projectName="SandBOX" targetName="update_mappings" />
      <config projectName="SandBOX" targetName="freetype" />
      <config projectName="SandBOX" targetName="uninstall" />
      <config projectName="SandBOX" targetName="UpdateAssimpLibsDebugSymbolsAndDLLs" />
      <config projectName="SandBOX" targetName="SandBOX" />
      <config projectName="SandBOX" targetName="spdlog" />
      <config projectName="SandBOX" targetName="imgui" />
    </generated>
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="Debug" ENABLED="true" CONFIG_NAME="Debug" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="65ce1bec-7ae4-4c6c-939e-a503a67ab4a8" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/RepoPBL.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/RepoPBL.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Readme.txt" beforeDir="false" afterPath="$PROJECT_DIR$/Readme.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/_deps/freetype-src/include/freetype/freetype.h" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/_deps/freetype-src/include/freetype/freetype.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake/CPM.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake/CPM.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake/global_settings.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake/global_settings.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/DirLight/DirLight.mtl" beforeDir="false" afterPath="$PROJECT_DIR$/res/DirLight/DirLight.mtl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/DirLight/DirLight.obj" beforeDir="false" afterPath="$PROJECT_DIR$/res/DirLight/DirLight.obj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/Models/Ant/ant-fixed.mtl" beforeDir="false" afterPath="$PROJECT_DIR$/res/Models/Ant/ant-fixed.mtl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/Models/Ant/ant-fixed.obj" beforeDir="false" afterPath="$PROJECT_DIR$/res/Models/Ant/ant-fixed.obj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/Models/Ant/ant_walk_0.1-0.mtl" beforeDir="false" afterPath="$PROJECT_DIR$/res/Models/Ant/ant_walk_0.1-0.mtl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/Models/Ant/ant_walk_0.1-0.obj" beforeDir="false" afterPath="$PROJECT_DIR$/res/Models/Ant/ant_walk_0.1-0.obj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/Models/Ant/ant_walk_0.1-1.mtl" beforeDir="false" afterPath="$PROJECT_DIR$/res/Models/Ant/ant_walk_0.1-1.mtl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/Models/Ant/ant_walk_0.1-1.obj" beforeDir="false" afterPath="$PROJECT_DIR$/res/Models/Ant/ant_walk_0.1-1.obj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/Models/Ant/ant_walk_0.1-2.mtl" beforeDir="false" afterPath="$PROJECT_DIR$/res/Models/Ant/ant_walk_0.1-2.mtl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/Models/Ant/ant_walk_0.1-2.obj" beforeDir="false" afterPath="$PROJECT_DIR$/res/Models/Ant/ant_walk_0.1-2.obj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/Models/Base/base_concept_2.0.mtl" beforeDir="false" afterPath="$PROJECT_DIR$/res/Models/Base/base_concept_2.0.mtl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/Models/Base/base_concept_2.0.obj" beforeDir="false" afterPath="$PROJECT_DIR$/res/Models/Base/base_concept_2.0.obj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/Models/Cloud/Cloud.mtl" beforeDir="false" afterPath="$PROJECT_DIR$/res/Models/Cloud/Cloud.mtl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/Models/Cloud/Cloud.obj" beforeDir="false" afterPath="$PROJECT_DIR$/res/Models/Cloud/Cloud.obj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/PointLight/PointLight.mtl" beforeDir="false" afterPath="$PROJECT_DIR$/res/PointLight/PointLight.mtl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/PointLight/PointLight.obj" beforeDir="false" afterPath="$PROJECT_DIR$/res/PointLight/PointLight.obj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/Sand/Sand.mtl" beforeDir="false" afterPath="$PROJECT_DIR$/res/Sand/Sand.mtl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/Sand/Sand.obj" beforeDir="false" afterPath="$PROJECT_DIR$/res/Sand/Sand.obj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/SpotLight/SpotLight.mtl" beforeDir="false" afterPath="$PROJECT_DIR$/res/SpotLight/SpotLight.mtl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/SpotLight/SpotLight.obj" beforeDir="false" afterPath="$PROJECT_DIR$/res/SpotLight/SpotLight.obj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/animatedTextureShader.fs" beforeDir="false" afterPath="$PROJECT_DIR$/res/animatedTextureShader.fs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/animatedTextureShader.vs" beforeDir="false" afterPath="$PROJECT_DIR$/res/animatedTextureShader.vs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/cloudFragShader.fs" beforeDir="false" afterPath="$PROJECT_DIR$/res/cloudFragShader.fs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/cloudVecShader.vs" beforeDir="false" afterPath="$PROJECT_DIR$/res/cloudVecShader.vs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/fonts/SIL Open Font License.txt" beforeDir="false" afterPath="$PROJECT_DIR$/res/fonts/SIL Open Font License.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/fragLightObjectShader.fs" beforeDir="false" afterPath="$PROJECT_DIR$/res/fragLightObjectShader.fs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/fragShader.fs" beforeDir="false" afterPath="$PROJECT_DIR$/res/fragShader.fs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/instancedFragShader.fs" beforeDir="false" afterPath="$PROJECT_DIR$/res/instancedFragShader.fs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/instancedVecShader.vs" beforeDir="false" afterPath="$PROJECT_DIR$/res/instancedVecShader.vs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/outlineShader.fs" beforeDir="false" afterPath="$PROJECT_DIR$/res/outlineShader.fs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/outlineShader.vs" beforeDir="false" afterPath="$PROJECT_DIR$/res/outlineShader.vs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/particleCompute.glsl" beforeDir="false" afterPath="$PROJECT_DIR$/res/particleCompute.glsl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/particleShader.fs" beforeDir="false" afterPath="$PROJECT_DIR$/res/particleShader.fs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/particleShader.vs" beforeDir="false" afterPath="$PROJECT_DIR$/res/particleShader.vs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/shadowInstanceShader.fs" beforeDir="false" afterPath="$PROJECT_DIR$/res/shadowInstanceShader.fs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/shadowInstanceShader.vs" beforeDir="false" afterPath="$PROJECT_DIR$/res/shadowInstanceShader.vs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/shadowShader.fs" beforeDir="false" afterPath="$PROJECT_DIR$/res/shadowShader.fs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/shadowShader.vs" beforeDir="false" afterPath="$PROJECT_DIR$/res/shadowShader.vs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/skyboxFragShader.fs" beforeDir="false" afterPath="$PROJECT_DIR$/res/skyboxFragShader.fs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/skyboxReflectionShader.fs" beforeDir="false" afterPath="$PROJECT_DIR$/res/skyboxReflectionShader.fs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/skyboxReflectionShader.vs" beforeDir="false" afterPath="$PROJECT_DIR$/res/skyboxReflectionShader.vs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/skyboxVecShader.vs" beforeDir="false" afterPath="$PROJECT_DIR$/res/skyboxVecShader.vs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/textShader.fs" beforeDir="false" afterPath="$PROJECT_DIR$/res/textShader.fs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/textShader.vs" beforeDir="false" afterPath="$PROJECT_DIR$/res/textShader.vs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/textureShader.fs" beforeDir="false" afterPath="$PROJECT_DIR$/res/textureShader.fs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/textureShader.vs" beforeDir="false" afterPath="$PROJECT_DIR$/res/textureShader.vs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/toonShader.fs" beforeDir="false" afterPath="$PROJECT_DIR$/res/toonShader.fs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/toonShader.vs" beforeDir="false" afterPath="$PROJECT_DIR$/res/toonShader.vs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/vecLightObjectShader.vs" beforeDir="false" afterPath="$PROJECT_DIR$/res/vecLightObjectShader.vs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/vecShader.vs" beforeDir="false" afterPath="$PROJECT_DIR$/res/vecShader.vs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/wireframeShader.fs" beforeDir="false" afterPath="$PROJECT_DIR$/res/wireframeShader.fs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/wireframeShader.vs" beforeDir="false" afterPath="$PROJECT_DIR$/res/wireframeShader.vs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/scenes/test1.json" beforeDir="false" afterPath="$PROJECT_DIR$/scenes/test1.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/scenes/test2.json" beforeDir="false" afterPath="$PROJECT_DIR$/scenes/test2.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/AnimatedTexture.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/AnimatedTexture.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/AudioContext.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/AudioContext.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/src/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Component/Animation.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/Animation.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Component/Animation.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/Animation.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Component/Animator.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/Animator.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Component/Animator.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/Animator.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Component/Block.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/Block.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Component/Block.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/Block.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Component/BlockData.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/BlockData.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Component/BlockData.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/BlockData.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Component/BlockManager.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/BlockManager.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Component/BlockManager.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/BlockManager.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Component/Camera.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/Camera.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Component/Camera.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/Camera.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Component/CloudManager.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/CloudManager.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Component/CloudManager.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/CloudManager.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Component/InstanceRenderer.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/InstanceRenderer.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Component/InstanceRenderer.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/InstanceRenderer.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Component/MeshRenderer.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/MeshRenderer.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Component/MeshRenderer.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/MeshRenderer.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Component/PlayerAudioController.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/PlayerAudioController.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Component/PlayerAudioController.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/PlayerAudioController.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Component/PlayerController.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/PlayerController.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Component/PlayerController.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/PlayerController.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Component/ShadowMap.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/ShadowMap.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Component/ShadowMap.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/ShadowMap.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Component/Skybox.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/Skybox.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Component/Skybox.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/Skybox.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Component/StaticBlockController.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/StaticBlockController.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Component/StaticBlockController.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/StaticBlockController.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Component/Transform.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/Transform.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Component/Transform.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/Transform.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/ComputeShader.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/ComputeShader.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Core/Component.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Core/Component.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Core/Component.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Core/Component.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Core/ComponentTypeEnum.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Core/ComponentTypeEnum.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Core/Input.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Core/Input.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Core/Input.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Core/Input.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Core/Node.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Core/Node.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Core/Node.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Core/Node.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Core/Time.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Core/Time.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Core/Time.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Core/Time.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/CylinderRenderer.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/CylinderRenderer.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Enemies/EnemiesAIManager.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Enemies/EnemiesAIManager.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Enemies/EnemiesAIManager.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Enemies/EnemiesAIManager.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Enemies/EnemyAI.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Enemies/EnemyAI.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Enemies/EnemyAI.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Enemies/EnemyAI.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Gui/ImguiHierarchy.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Gui/ImguiHierarchy.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Gui/ImguiHierarchy.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Gui/ImguiHierarchy.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Gui/ImguiInspector.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Gui/ImguiInspector.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Gui/ImguiInspector.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Gui/ImguiInspector.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Gui/ImguiMain.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Gui/ImguiMain.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Gui/ImguiMain.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Gui/ImguiMain.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/HUD/HUDMain.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/HUD/HUDMain.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/HUD/HUDMain.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/HUD/HUDMain.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/HUD/Image/ImageHUD.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/HUD/Image/ImageHUD.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/HUD/Image/ImageHUD.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/HUD/Image/ImageHUD.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/HUD/Text/TextRenderer.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/HUD/Text/TextRenderer.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/HUD/Text/TextRenderer.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/HUD/Text/TextRenderer.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/InstanceObject.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/InstanceObject.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Managers/AudioEngineManager.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Managers/AudioEngineManager.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Managers/AudioEngineManager.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Managers/AudioEngineManager.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Managers/ComponentsManager.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Managers/ComponentsManager.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Managers/ComponentsManager.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Managers/ComponentsManager.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Managers/GameManager.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Managers/GameManager.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Managers/GameManager.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Managers/GameManager.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Managers/NodesManager.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Managers/NodesManager.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Managers/NodesManager.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Managers/NodesManager.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Managers/ResourceManager.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Managers/ResourceManager.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Managers/ResourceManager.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Managers/ResourceManager.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Managers/SceneManager.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Managers/SceneManager.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Managers/SceneManager.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Managers/SceneManager.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/OrbitRenderer.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/OrbitRenderer.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/ParticleGenerator.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/ParticleGenerator.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/ParticleGenerator.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/ParticleGenerator.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Sound.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Sound.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Sound.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Sound.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/imgui_impl/imgui_impl_glfw.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/imgui_impl/imgui_impl_glfw.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/imgui_impl/imgui_impl_glfw.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/imgui_impl/imgui_impl_glfw.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/imgui_impl/imgui_impl_opengl3.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/imgui_impl/imgui_impl_opengl3.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/imgui_impl/imgui_impl_opengl3.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/imgui_impl/imgui_impl_opengl3.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/imgui_impl/imgui_impl_opengl3_loader.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/imgui_impl/imgui_impl_opengl3_loader.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/mesh.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/mesh.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/model.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/model.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/shader_s.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/shader_s.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/texture.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/texture.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/texture.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/texture.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/thirdparty/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/thirdparty/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/thirdparty/glad/include/KHR/khrplatform.h" beforeDir="false" afterPath="$PROJECT_DIR$/thirdparty/glad/include/KHR/khrplatform.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/thirdparty/glad/include/glad/glad.h" beforeDir="false" afterPath="$PROJECT_DIR$/thirdparty/glad/include/glad/glad.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/thirdparty/glad/src/glad.c" beforeDir="false" afterPath="$PROJECT_DIR$/thirdparty/glad/src/glad.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/thirdparty/miniaudio.h" beforeDir="false" afterPath="$PROJECT_DIR$/thirdparty/miniaudio.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/thirdparty/nlohmann/json.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/thirdparty/nlohmann/json.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/thirdparty/nlohmann/json_fwd.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/thirdparty/nlohmann/json_fwd.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/thirdparty/stb_image/stb_image.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/thirdparty/stb_image/stb_image.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/thirdparty/stb_image/stb_image.h" beforeDir="false" afterPath="$PROJECT_DIR$/thirdparty/stb_image/stb_image.h" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectApplicationVersion">
    <option name="ide" value="CLion" />
    <option name="majorVersion" value="2024" />
    <option name="minorVersion" value="1" />
    <option name="productBranch" value="Classic" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="2fN18VaL9NsagrvMEynTtqnSLK3" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;CMake Application.SandBOX.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.readMode.enableVisualFormatting&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;cf.advertisement.text.has.clang-format&quot;: &quot;true&quot;,
    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,
    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/ZTGK/NewestClone/PBL_game&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\RepoPBL\res\Models\Ant" />
      <recent name="C:\RepoPBL\cmake-build-debug\src\res\Models" />
      <recent name="C:\RepoPBL\res\Models\Base" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\RepoPBL\src\Component" />
    </key>
  </component>
  <component name="RunManager" selected="CMake Application.SandBOX">
    <configuration name="SandBOX" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="SandBOX" TARGET_NAME="SandBOX" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="SandBOX" RUN_TARGET_NAME="SandBOX">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="UpdateAssimpLibsDebugSymbolsAndDLLs" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="SandBOX" TARGET_NAME="UpdateAssimpLibsDebugSymbolsAndDLLs" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="assimp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="SandBOX" TARGET_NAME="assimp" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="freetype" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="SandBOX" TARGET_NAME="freetype" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="glad" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="SandBOX" TARGET_NAME="glad" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="glfw" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="SandBOX" TARGET_NAME="glfw" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="imgui" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="SandBOX" TARGET_NAME="imgui" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="spdlog" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="SandBOX" TARGET_NAME="spdlog" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="stb_image" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="SandBOX" TARGET_NAME="stb_image" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="uninstall" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="SandBOX" TARGET_NAME="uninstall" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="update_mappings" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="SandBOX" TARGET_NAME="update_mappings" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="zlibstatic" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="SandBOX" TARGET_NAME="zlibstatic" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="CMake Application.uninstall" />
      <item itemvalue="CMake Application.UpdateAssimpLibsDebugSymbolsAndDLLs" />
      <item itemvalue="CMake Application.assimp" />
      <item itemvalue="CMake Application.zlibstatic" />
      <item itemvalue="CMake Application.freetype" />
      <item itemvalue="CMake Application.glfw" />
      <item itemvalue="CMake Application.update_mappings" />
      <item itemvalue="CMake Application.spdlog" />
      <item itemvalue="CMake Application.SandBOX" />
      <item itemvalue="CMake Application.glad" />
      <item itemvalue="CMake Application.imgui" />
      <item itemvalue="CMake Application.stb_image" />
    </list>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="65ce1bec-7ae4-4c6c-939e-a503a67ab4a8" name="Changes" comment="" />
      <created>1713626562577</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1713626562577</updated>
      <workItem from="1713626563483" duration="347000" />
      <workItem from="1713646065861" duration="4774000" />
      <workItem from="1713693373531" duration="7374000" />
      <workItem from="1713713921180" duration="2419000" />
      <workItem from="1713728066841" duration="1512000" />
      <workItem from="1713864725418" duration="7485000" />
      <workItem from="1713952206838" duration="18436000" />
      <workItem from="1714046833352" duration="7955000" />
      <workItem from="1714124316079" duration="1279000" />
      <workItem from="1714418441389" duration="3195000" />
      <workItem from="1714647246790" duration="41270000" />
      <workItem from="1714766785057" duration="8009000" />
      <workItem from="1714813004054" duration="2482000" />
      <workItem from="1714843534785" duration="4301000" />
      <workItem from="1714995837186" duration="20980000" />
      <workItem from="1715071088162" duration="5109000" />
      <workItem from="1715175278903" duration="595000" />
      <workItem from="1715252763642" duration="765000" />
      <workItem from="1715256586450" duration="493000" />
      <workItem from="1715262175855" duration="39000" />
      <workItem from="1715675882716" duration="5887000" />
      <workItem from="1715757148108" duration="28307000" />
      <workItem from="1716148896599" duration="1292000" />
      <workItem from="1716203457553" duration="7965000" />
      <workItem from="1716219913756" duration="2302000" />
      <workItem from="1716289174191" duration="3575000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VCPKGProject">
    <isAutomaticEditVcpkgJson value="true" />
    <isAutomaticCheckingOnLaunch value="false" />
    <isAutomaticFoundErrors value="true" />
    <isAutomaticFoundErrors value="true" />
  </component>
  <component name="XDebuggerManager">
    <watches-manager>
      <configuration name="CMakeRunConfiguration">
        <watch expression="*particleData @ &lt;Enter Size&gt;" />
      </configuration>
    </watches-manager>
  </component>
</project>